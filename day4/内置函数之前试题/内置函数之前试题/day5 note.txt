

sorted()     列举3个事例
zip()        列举3个事例
max()        列举3个事例
enumarate()  列举3个事例
map()  	     列举3个事例
filter()     列举3个事例
reduce()     列举3个事例
 
#################################   内置函数实现   ##################################

1. 通过内置函数计算5除以2的余数
2. 现有两元祖  (('a'),('b'),('c'),('d') ) ,请使用Python中的匿名函数生成列表 [ {'a':'c',{'c':'d'}]
3. 使用文件读取，找出文件中最长的行的长度（用一行代码解决）？
4. 已知字符串 name = “aahhh113244ADD.,/'[@#$hhhhTTTTTT666”,要求如下: 
      请统计 name 字符串出现的每个字母的出现次数（忽略大小写，a与A是同一个字母），并输出成一个字典。 例 {‘a’:2,’h’:7}
5. 用最简单的方法将二维数组a = [[1,2,3],][4,5,6],][7,8,9],[11,12,13]]变成一维数组a = [1,2,3,4,5,6,7,8,9,11,12,13]
6. 一行代码生成 [1,4,9,16,25,36,49,64,81,100]
7. map(str,[1,2,3,4,5,6,7,8,9])输出什么？Python2 和Python3输出的结果一样吗？
8. list 对象 alist [{'name':'a','age':20},{'name':'b','age':30},{'name':'c','age':25}]， 请按 alist 中元素的age  由大到小排序；
9. map(str,[1,2,3,4,5,6,7,8,9])输出什么？
10. salaries={
	    'egon':3000,
	    'alex':100000000,
	    'wupeiqi':10000,
	    'yuanhao':250
	}
	1. 按字典的key去排序，结果salaries={'alex':100000000,'egon':3000,'wupeiqi':10000,'yuanhao':250}
	2. 按照值排序，按照从小到大的顺序打印出key 结果为['yuanhao', 'egon', 'wupeiqi', 'alex']

11. l1=[1,2,3,4]
	s='hel'
	使用内置函数输出 [(1, 'h'), (2, 'e'), (3, 'l')]

12. salaries={
	    'egon':3000,
	    'alex':100000000,
	    'wupeiqi':10000,
	    'yuanhao':250
	}
	使用内置函数输出  [(3000, 'egon'), (100000000, 'alex'), (250, 'yuanhao'), (10000, 'wupeiqi')]

13. salaries={
	    'egon':3000,
	    'alex':100000000,
	    'wupeiqi':10000,
	    'yuanhao':250
	}

	输出钱最多的人名  结果为alex

14. name=['alex','wupeiqi','yuanhao']   将每个人名后加_sb 结果为['alex_sb','wupeiqi_sb','yuanhao_sb']

15. shares = {
	    'IBM': 36.6,
	    'Lenovo': 23.2,
	    'oldboy': 21.2,
	    'ocean': 10.2,
	}

	输出钱大于20的人名  结果为['IBM', 'Lenovo', 'oldboy']













 








